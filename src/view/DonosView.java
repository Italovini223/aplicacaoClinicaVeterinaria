/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package view;

// Importe as classes necessárias
import model.DonosModel;
import controller.DonosController; // Garanta que o DonosController existe
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Gamer (Adaptado por Gemini)
 */
public class DonosView extends javax.swing.JInternalFrame {

    private int linha = -1; // Variável para controlar a linha selecionada na tabela

    /**
     * Creates new form DonosView
     */
    public DonosView() {
        initComponents();
        preencherTabela();
        inicializa();     
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jtxIdDono = new javax.swing.JTextField();
        jtxNome = new javax.swing.JTextField();
        jtxCpf = new javax.swing.JTextField();
        jtxEmail = new javax.swing.JTextField();
        jtxTelefone = new javax.swing.JTextField();
        jtxDataNascimento = new javax.swing.JTextField();
        jbPesquisar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtDonos = new javax.swing.JTable();
        jbNovo = new javax.swing.JToggleButton();
        jbSalvar = new javax.swing.JButton();
        jbEditar = new javax.swing.JButton();
        jbExcluir = new javax.swing.JButton();
        jbFechar = new javax.swing.JButton();

        jLabel1.setText("Codigo");

        jLabel2.setText("Nome");

        jLabel6.setText("Cpf");

        jLabel7.setText("email");

        jLabel8.setText("telefone");

        jLabel9.setText("data de nascimento");

        jtxNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxNomeActionPerformed(evt);
            }
        });

        jtxTelefone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxTelefoneActionPerformed(evt);
            }
        });

        jtxDataNascimento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxDataNascimentoActionPerformed(evt);
            }
        });

        jbPesquisar.setText("Pesquisar");
        jbPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbPesquisarActionPerformed(evt);
            }
        });

        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        jtDonos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Codigo", "nome", "cpf", "email", "telefone", "nascimento"
            }
        ));
        jtDonos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtDonosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtDonos);

        jbNovo.setText("Novo");
        jbNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNovoActionPerformed(evt);
            }
        });

        jbSalvar.setText("Salvar");
        jbSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalvarActionPerformed(evt);
            }
        });

        jbEditar.setText("Editar");
        jbEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEditarActionPerformed(evt);
            }
        });

        jbExcluir.setText("Excluir");
        jbExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExcluirActionPerformed(evt);
            }
        });

        jbFechar.setText("Fechar");
        jbFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbFecharActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jtxTelefone))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jtxDataNascimento))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jtxIdDono, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                                        .addComponent(jbPesquisar))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel6)
                                            .addComponent(jLabel7))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jtxNome)
                                            .addComponent(jtxCpf)
                                            .addComponent(jtxEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE))))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jbNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jbSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58)
                        .addComponent(jbEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                        .addComponent(jbExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(jbFechar, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(90, 90, 90))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtxIdDono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbPesquisar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtxNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jtxCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jtxEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jtxTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jtxDataNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jbFechar, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jbExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jbEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jbSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(282, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 290, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbPesquisarActionPerformed
       DonosModel dono = new DonosModel();
       if(jtxIdDono.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Preencha o código do dono!"
                    , "Retorno Tela", JOptionPane.ERROR_MESSAGE);
       }else{
           try { // Adicionado try-catch para parseInt
               dono.setDonoId(Integer.parseInt(jtxIdDono.getText()));
               DonosController controller = new DonosController();
               dono = controller.selecionar(dono);
               
               if(dono == null){
                    JOptionPane.showMessageDialog(this, "Dono não encontrado!"
                        , "Retorno BD", JOptionPane.ERROR_MESSAGE);
                    limparCampos();
                    inicializa();
               }else {
                   jtxNome.setText(dono.getNome());
                   jtxCpf.setText(dono.getCpf());
                   jtxEmail.setText(dono.getEmail());
                   jtxTelefone.setText(dono.getNumero()); 
                   jtxDataNascimento.setText(dono.getDataNascimento());
                   
                   jbNovo.setEnabled(false);
                   jbSalvar.setEnabled(false);
                   jbEditar.setEnabled(true);
                   jbExcluir.setEnabled(true);
                   jtxIdDono.setEditable(false);
                   jtxNome.setEditable(true);
                   jtxCpf.setEditable(true);
                   jtxEmail.setEditable(true);
                   jtxTelefone.setEditable(true);
                   jtxDataNascimento.setEditable(true);
               }
           } catch (NumberFormatException e) {
               JOptionPane.showMessageDialog(this, "Código inválido. Digite apenas números!", "Erro de Formato", JOptionPane.ERROR_MESSAGE);
           }
       }
    }//GEN-LAST:event_jbPesquisarActionPerformed

    private void jtxNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxNomeActionPerformed

    private void jtxTelefoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxTelefoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxTelefoneActionPerformed

    private void jtxDataNascimentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxDataNascimentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxDataNascimentoActionPerformed

    private void jbNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNovoActionPerformed
        limparCampos(); // Limpar campos para nova entrada
        jbPesquisar.setEnabled(false);
        jbNovo.setEnabled(false);
        jbEditar.setEnabled(false);
        jbExcluir.setEnabled(false);
        jbSalvar.setEnabled(true);
        jtxIdDono.setEditable(false); 
        jtxNome.setEditable(true);
        jtxCpf.setEditable(true);
        jtxEmail.setEditable(true);
        jtxTelefone.setEditable(true);
        jtxDataNascimento.setEditable(true);      
    }//GEN-LAST:event_jbNovoActionPerformed

    private void jbExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExcluirActionPerformed
        DonosModel dono = new DonosModel();
        if(jtxIdDono.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Digite o código do dono!"
                    , "Retorno Tela", JOptionPane.ERROR_MESSAGE);
        } else {
            int confirm = JOptionPane.showConfirmDialog(this, "Tem certeza que deseja excluir este dono?", "Confirmar Exclusão", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.NO_OPTION) {
                return;
            }
            try { 
                dono.setDonoId(Integer.parseInt(jtxIdDono.getText()));
                
                DonosController controller = new DonosController();
                if(controller.excluir(dono)){
                    JOptionPane.showMessageDialog(this, "Dono excluído com sucesso!");
                    limparCampos();    
                    inicializa();
                    preencherTabela(); 
                } else {
                 JOptionPane.showMessageDialog(this, "Erro ao Excluir!"
                        , "Retorno BD", JOptionPane.ERROR_MESSAGE);
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Código inválido. Digite apenas números!", "Erro de Formato", JOptionPane.ERROR_MESSAGE);
            }
        }   
    }//GEN-LAST:event_jbExcluirActionPerformed

    private void jbEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEditarActionPerformed
       
       if(jtxIdDono.getText().isEmpty()){
           JOptionPane.showMessageDialog(this, "Preencha o código do dono para editar!", "Retorno Tela", JOptionPane.ERROR_MESSAGE);
           return;
       }
       try {
           int idDono = Integer.parseInt(jtxIdDono.getText());
           String nome = jtxNome.getText();
           String cpf = jtxCpf.getText();
           String email = jtxEmail.getText();
           String telefone = jtxTelefone.getText();
           String dataNascimento = jtxDataNascimento.getText();
           
           if((nome.isEmpty())||(cpf.isEmpty())||(email.isEmpty())||(telefone.isEmpty())||(dataNascimento.isEmpty())){
            JOptionPane.showMessageDialog(this, "Digite todos os campos!"
                , "Retorno Tela", JOptionPane.ERROR_MESSAGE);
           } else {
               DonosModel dono = new DonosModel();
               dono.setDonoId(idDono);
               dono.setNome(nome);
               dono.setCpf(cpf);
               dono.setEmail(email);
               dono.setNumero(telefone);
               dono.setDataNascimento(dataNascimento);
               
               DonosController controller = new DonosController();
               if(controller.editar(dono)){
                    JOptionPane.showMessageDialog(this, "Atualização com sucesso!");
                    limparCampos();
                    inicializa();
                    preencherTabela();
               }else {
                    JOptionPane.showMessageDialog(this, "Erro ao editar dono!"
                        , "Retorno BD", JOptionPane.ERROR_MESSAGE);
               }
           }
       } catch (NumberFormatException e) {
           JOptionPane.showMessageDialog(this, "Código inválido. Digite apenas números!", "Erro de Formato", JOptionPane.ERROR_MESSAGE);
       }
    }//GEN-LAST:event_jbEditarActionPerformed

    private void jbSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalvarActionPerformed
       String nome = jtxNome.getText();
       String cpf = jtxCpf.getText();
       String email = jtxEmail.getText();
       String telefone = jtxTelefone.getText();
       String dataNascimento = jtxDataNascimento.getText();
       
       if((nome.isEmpty())||(cpf.isEmpty())||(email.isEmpty())||(telefone.isEmpty())||(dataNascimento.isEmpty())){
        JOptionPane.showMessageDialog(this, "Digite todos os campos!"
            , "Retorno Tela", JOptionPane.ERROR_MESSAGE);
       } else {
           DonosModel dono = new DonosModel();
           dono.setNome(nome);
           dono.setCpf(cpf);
           dono.setEmail(email);
           dono.setNumero(telefone);
           dono.setDataNascimento(dataNascimento);
           
            DonosController controller = new DonosController();
            if(controller.inserir(dono)){
                JOptionPane.showMessageDialog(this, "Dono Inserido com sucesso");
                limparCampos();
                inicializa();
                preencherTabela();
            }else{
                JOptionPane.showMessageDialog(this, "Erro ao inserir o dono!" // Corrigido a mensagem
                    , "Retorno BD", JOptionPane.ERROR_MESSAGE);
            }
       } 
    }//GEN-LAST:event_jbSalvarActionPerformed

    private void jtDonosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtDonosMouseClicked
       
       linha = jtDonos.getSelectedRow();
        if(linha != -1){
            jtxIdDono.setText(jtDonos.getValueAt(linha, 0).toString());
            jtxNome.setText(jtDonos.getValueAt(linha, 1).toString());
            jtxCpf.setText(jtDonos.getValueAt(linha, 2).toString());
            jtxEmail.setText(jtDonos.getValueAt(linha, 3).toString());
            jtxTelefone.setText(jtDonos.getValueAt(linha, 4).toString());
            jtxDataNascimento.setText(jtDonos.getValueAt(linha, 5).toString());
            
            jbNovo.setEnabled(false);
            jbSalvar.setEnabled(false);
            jbEditar.setEnabled(true);
            jbExcluir.setEnabled(true);
            jtxIdDono.setEditable(false);
            jtxNome.setEditable(true);
            jtxCpf.setEditable(true);
            jtxEmail.setEditable(true);
            jtxTelefone.setEditable(true);
            jtxDataNascimento.setEditable(true);
            
            // linha = -1; // Comentar esta linha se quiser manter a linha selecionada na tabela
        }
    }//GEN-LAST:event_jtDonosMouseClicked

    private void jbFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbFecharActionPerformed
        dispose(); 
    }//GEN-LAST:event_jbFecharActionPerformed
    
  
   
   void inicializa(){
        jtxIdDono.setEditable(true); // ID editável para pesquisa
        jtxNome.setEditable(false);
        jtxCpf.setEditable(false);
        jtxEmail.setEditable(false);
        jtxTelefone.setEditable(false);
        jtxDataNascimento.setEditable(false);
        jbSalvar.setEnabled(false);
        jbEditar.setEnabled(false);
        jbExcluir.setEnabled(false);
        jbPesquisar.setEnabled(true);
        jbNovo.setEnabled(true);
        limparCampos(); 
   }
    
   
    private void preencherTabela(){
        DonosController controller = new DonosController();
        ArrayList<DonosModel> lista = controller.selecionarTodos();
        DefaultTableModel modeloTabela = (DefaultTableModel) jtDonos.getModel();
        modeloTabela.setRowCount(0); 
        
        
        if(lista.isEmpty()){
            
        } else {
            for(DonosModel d: lista){
                modeloTabela.addRow(new String[]{
                    String.valueOf(d.getDonoId()),
                    d.getNome(),
                    d.getCpf(),
                    d.getEmail(),
                    d.getNumero(),
                    d.getDataNascimento()
                });
            }
        }   
    }
    
    
    private void limparCampos(){
       jtxIdDono.setText("");
       jtxNome.setText("");
       jtxCpf.setText("");
       jtxEmail.setText("");
       jtxTelefone.setText(""); 
       jtxDataNascimento.setText(""); 
    }
    

    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbEditar;
    private javax.swing.JButton jbExcluir;
    private javax.swing.JButton jbFechar;
    private javax.swing.JToggleButton jbNovo;
    private javax.swing.JButton jbPesquisar;
    private javax.swing.JButton jbSalvar;
    private javax.swing.JTable jtDonos;
    private javax.swing.JTextField jtxCpf;
    private javax.swing.JTextField jtxDataNascimento;
    private javax.swing.JTextField jtxEmail;
    private javax.swing.JTextField jtxIdDono;
    private javax.swing.JTextField jtxNome;
    private javax.swing.JTextField jtxTelefone;
    // End of variables declaration//GEN-END:variables
}