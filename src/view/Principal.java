package view;

import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;
import util.Relatorios;

/**
 *
 * @author Yan
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        areaTrabalho = new javax.swing.JDesktopPane();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jmiDono = new javax.swing.JMenuItem();
        jmiPets = new javax.swing.JMenuItem();
        jmiMedicos = new javax.swing.JMenuItem();
        jmiProcedimentos = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jmiRegistrar = new javax.swing.JMenuItem();
        jmiEditarAtendimento = new javax.swing.JMenuItem();
        jmiListarTodosAtendimentos = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        relatorioMedicos = new javax.swing.JMenuItem();
        relatorioDonos = new javax.swing.JMenuItem();
        relatorioPets = new javax.swing.JMenuItem();
        relatorioProcedimentos = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout areaTrabalhoLayout = new javax.swing.GroupLayout(areaTrabalho);
        areaTrabalho.setLayout(areaTrabalhoLayout);
        areaTrabalhoLayout.setHorizontalGroup(
            areaTrabalhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );
        areaTrabalhoLayout.setVerticalGroup(
            areaTrabalhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 692, Short.MAX_VALUE)
        );

        jMenu1.setText("Cadastro");
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });

        jmiDono.setText("Donos");
        jmiDono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiDonoActionPerformed(evt);
            }
        });
        jMenu1.add(jmiDono);

        jmiPets.setText("Pets");
        jmiPets.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiPetsActionPerformed(evt);
            }
        });
        jMenu1.add(jmiPets);

        jmiMedicos.setText("Medicos");
        jmiMedicos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiMedicosActionPerformed(evt);
            }
        });
        jMenu1.add(jmiMedicos);

        jmiProcedimentos.setText("Procedimentos");
        jmiProcedimentos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiProcedimentosActionPerformed(evt);
            }
        });
        jMenu1.add(jmiProcedimentos);

        jMenuBar2.add(jMenu1);

        jMenu2.setText("Atendimentos");

        jmiRegistrar.setText("Registrar");
        jmiRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiRegistrarActionPerformed(evt);
            }
        });
        jMenu2.add(jmiRegistrar);

        jmiEditarAtendimento.setText("Editar / Excluir");
        jmiEditarAtendimento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiEditarAtendimentoActionPerformed(evt);
            }
        });
        jMenu2.add(jmiEditarAtendimento);

        jmiListarTodosAtendimentos.setText("Listar Todos");
        jmiListarTodosAtendimentos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiListarTodosAtendimentosActionPerformed(evt);
            }
        });
        jMenu2.add(jmiListarTodosAtendimentos);

        jMenuBar2.add(jMenu2);

        jMenu3.setText("Relatórios");

        relatorioMedicos.setText("Relatórios de Médicos");
        relatorioMedicos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                relatorioMedicosActionPerformed(evt);
            }
        });
        jMenu3.add(relatorioMedicos);

        relatorioDonos.setText("Relatórios de Donos");
        relatorioDonos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                relatorioDonosActionPerformed(evt);
            }
        });
        jMenu3.add(relatorioDonos);

        relatorioPets.setText("Relatórios de Pets");
        relatorioPets.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                relatorioPetsActionPerformed(evt);
            }
        });
        jMenu3.add(relatorioPets);

        relatorioProcedimentos.setText("Relatórios de Procedimentos");
        relatorioProcedimentos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                relatorioProcedimentosActionPerformed(evt);
            }
        });
        jMenu3.add(relatorioProcedimentos);

        jMenuBar2.add(jMenu3);

        setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(areaTrabalho)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(areaTrabalho)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jmiDonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiDonoActionPerformed
       DonosView dono = new DonosView();
       dono.setVisible(true);
       areaTrabalho.add(dono);
    }//GEN-LAST:event_jmiDonoActionPerformed

    private void jmiPetsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiPetsActionPerformed
        PetsView pets = new PetsView();
        pets.setVisible(true);
        areaTrabalho.add(pets);
    }//GEN-LAST:event_jmiPetsActionPerformed

    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu1ActionPerformed
      
        
    }//GEN-LAST:event_jMenu1ActionPerformed

    private void jmiProcedimentosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiProcedimentosActionPerformed
        ProcedimentoView procedimentos = new ProcedimentoView();
        procedimentos.setVisible(true);
        areaTrabalho.add(procedimentos);
    }//GEN-LAST:event_jmiProcedimentosActionPerformed

    private void jmiMedicosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiMedicosActionPerformed
       MedicoView medicos = new MedicoView();
       medicos.setVisible(true);
       areaTrabalho.add(medicos);
    }//GEN-LAST:event_jmiMedicosActionPerformed

    private void jmiRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiRegistrarActionPerformed
        NovoAtendimentoView novoAtendimento = new NovoAtendimentoView();
        novoAtendimento.setVisible(true);
        areaTrabalho.add(novoAtendimento);
    }//GEN-LAST:event_jmiRegistrarActionPerformed

    private void jmiEditarAtendimentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiEditarAtendimentoActionPerformed
       EditarAtendimentoView editarAtendimento = new EditarAtendimentoView();
       editarAtendimento.setVisible(true);
       areaTrabalho.add(editarAtendimento);
    }//GEN-LAST:event_jmiEditarAtendimentoActionPerformed

    private void jmiListarTodosAtendimentosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiListarTodosAtendimentosActionPerformed
       ListarTodosAtendimentosView listarTodosAtendimentos = new ListarTodosAtendimentosView();
       listarTodosAtendimentos.setVisible(true);
       areaTrabalho.add(listarTodosAtendimentos);
    }//GEN-LAST:event_jmiListarTodosAtendimentosActionPerformed

    private void relatorioMedicosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_relatorioMedicosActionPerformed
        try {
            Map<String,Object> params = new HashMap<>();
            Relatorios.gerarRelatorio("relatorioMedicos", params);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(
                this,
                "Erro ao gerar relatório de Médicos:\n" + ex.getMessage(),
                "Erro",
                JOptionPane.ERROR_MESSAGE
            );
        }
    }//GEN-LAST:event_relatorioMedicosActionPerformed

    private void relatorioDonosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_relatorioDonosActionPerformed
        try {
            Map<String,Object> params = new HashMap<>();
            Relatorios.gerarRelatorio("relatorioDonos", params);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(
                this,
                "Erro ao gerar relatório de Donos:\n" + ex.getMessage(),
                "Erro",
                JOptionPane.ERROR_MESSAGE
            );
        }
    }//GEN-LAST:event_relatorioDonosActionPerformed

    private void relatorioPetsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_relatorioPetsActionPerformed
        try {
            Map<String,Object> params = new HashMap<>();
            Relatorios.gerarRelatorio("relatorioPets", params);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(
                this,
                "Erro ao gerar relatório de Pets:\n" + ex.getMessage(),
                "Erro",
                JOptionPane.ERROR_MESSAGE
            );
        }
    }//GEN-LAST:event_relatorioPetsActionPerformed

    private void relatorioProcedimentosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_relatorioProcedimentosActionPerformed
        try {
            Map<String,Object> params = new HashMap<>();
            Relatorios.gerarRelatorio("relatorioProcedimentos", params);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(
                this,
                "Erro ao gerar relatório de Procedimentos:\n" + ex.getMessage(),
                "Erro",
                JOptionPane.ERROR_MESSAGE
            );
        }
    }//GEN-LAST:event_relatorioProcedimentosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDesktopPane areaTrabalho;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jmiDono;
    private javax.swing.JMenuItem jmiEditarAtendimento;
    private javax.swing.JMenuItem jmiListarTodosAtendimentos;
    private javax.swing.JMenuItem jmiMedicos;
    private javax.swing.JMenuItem jmiPets;
    private javax.swing.JMenuItem jmiProcedimentos;
    private javax.swing.JMenuItem jmiRegistrar;
    private javax.swing.JMenuItem relatorioDonos;
    private javax.swing.JMenuItem relatorioMedicos;
    private javax.swing.JMenuItem relatorioPets;
    private javax.swing.JMenuItem relatorioProcedimentos;
    // End of variables declaration//GEN-END:variables
}
